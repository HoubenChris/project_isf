@model project_isf.Domain.POCO.ISFEvent

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Event</legend>

        @Html.HiddenFor(model => model.ISFEventId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
           @Html.Label("Type")
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Category,true) Athletics
            @Html.RadioButtonFor(model => model.Category,false) Swimming
        </div>

        <div class="editor-label">
            @Html.Label("Time or distance")
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.TimeOrDistance,true) Time
            @Html.RadioButtonFor(model => model.TimeOrDistance,false) Distance
        </div>

        <div class="editor-label">
           @Html.Label("School Cup Event")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SchoolCupEvent)
            @Html.ValidationMessageFor(model => model.SchoolCupEvent)
        </div>

        <div class="editor-label">
           @Html.Label("Time minimum")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeMinimum)
            @Html.ValidationMessageFor(model => model.TimeMinimum)
        </div>

        <div class="editor-label">
           @Html.Label("Time maximum")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeMaximum)
            @Html.ValidationMessageFor(model => model.TimeMaximum)
        </div>

        <div class="editor-label">
            @Html.Label("Distance minimum")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DistanceMinimum)
            @Html.ValidationMessageFor(model => model.DistanceMinimum)
        </div>

        <div class="editor-label">
           @Html.Label("Distance maximum")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DistanceMaximum)
            @Html.ValidationMessageFor(model => model.DistanceMaximum)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RecordHolder)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RecordHolder)
            @Html.ValidationMessageFor(model => model.RecordHolder)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
